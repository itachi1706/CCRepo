local args = { ... }

errorMsg = "ERROR-UPDATER"

-- This script is used to refresh all the code in the PC
termX, termY = term.getSize()

function drawTitleBar()
	titleBar.draw("CCRepo", "Updater", 256, colors.cyan, 128, 1)
end

function welcome()
	term.setBackgroundColor(256)
	term.clear()
	drawTitleBar()
	printer.centered("Welcome to the CCRepo Updater", 4)
	printer.centered("This updater will guide you", 6)
	printer.centered("to merge updates from GitHub", 7)
	printer.centered("To continue, press Y (or N to cancel)", 9)
	local event,key = os.pullEvent("key")
	if key == keys.y then
		term.clear()
		drawTitleBar()
		printer.centered("Init Update...", 4)
		sleep(1)
		printer.centered("Established Connection", 6)
		sleep(0.1)
		printer.centered("Downloading...", 6)
		downloader()
		printer.centered("Finished downloading updates", 6)
		sleep(1)
		term.clear()
		drawTitleBar()
		printer.centered("Update Complete", 6)
		printer.centered("Your system has been updated", 8)
		printer.centered("Verifying integrity of update...", 19)
		sleep(2)
		printer.centered("Press any key to reboot", 19)
		os.pullEvent("key")
		term.setBackgroundColor(colors.black)
		term.clear()
		term.setCursorPos(1,1)
		term.clearLine()
		os.reboot()
	else
		term.clear()
		drawTitleBar()
		printer.centered("Update has been cancelled", 6)
		sleep(1)
		printer.centered("System will now shutdown", 8)
		sleep(2)
		os.shutdown()
	end
end

function downloader(quietDownload)
	drawTitleBar()
	printer.centered("Syncing with GitHub... Please Wait...", 6)

	--API Updates
	if not download.git("https://raw.githubusercontent.com/itachi1706/CCRepo/master/api/download", "/api/download") then return errMess end
	if not download.git("https://raw.githubusercontent.com/itachi1706/CCRepo/master/api/systemCheck", "/api/systemCheck") then return errMess end
	if not download.git("https://raw.githubusercontent.com/itachi1706/CCRepo/master/api/update", "/api/update") then return errMess end
	if not download.git("https://raw.githubusercontent.com/itachi1706/CCRepo/master/api/printer", "/api/printer") then return errMess end
	if not download.git("https://raw.githubusercontent.com/itachi1706/CCRepo/master/api/titleBar", "/api/titleBar") then return errMess end
	if not download.git("https://raw.githubusercontent.com/itachi1706/CCRepo/master/api/errora", "/api/errora") then return errMess end

	--Special APIs Updates
	if not download.git("https://raw.githubusercontent.com/itachi1706/CCRepo/master/special-api/button", "/special-api/button") then return errMess end

	--General Documentation
	if not download.git("https://raw.githubusercontent.com/itachi1706/CCRepo/master/README.md", "/Documentation/README") then return errMess end

	--Updater Update
	if not download.git("https://raw.githubusercontent.com/itachi1706/CCRepo/master/systemFiles/Install/updater", "systemFiles/Install/updater") then return errMess end

	--Startup and Version file updates
	if not download.git("https://raw.githubusercontent.com/itachi1706/CCRepo/master/startup", "startup") then return errMess end
	if not download.git("https://raw.githubusercontent.com/itachi1706/CCRepo/master/version", "version") then return errMess end
	if not download.git("https://raw.githubusercontent.com/itachi1706/CCRepo/master/forceupdate", "forceupdate") then return errMess end

	--Program Updates
	if not download.git("https://raw.githubusercontent.com/itachi1706/CCRepo/master/programs/test", "programs/test") then return errMess end
	if not download.git("https://raw.githubusercontent.com/itachi1706/CCRepo/master/programs/powerReactorControl", "programs/powerReactorControl") then return errMess end
	
	printer.centered("Sync complete! Rebooting in 5 seconds...", 6)
	local f = fs.open("version", "r")
	vCurrent = f.readLine()
	f.close()
	printer.centered("New Version: "..vCurrent, 12)
	sleep(5)
	if quietDownload then 
		os.reboot()
	else 
		return true
	end
end

if args[1] == "quiet" then
	term.setBackgroundColor(256)
	term.clear()
	drawTitleBar()
	if downloader(true) == "ERROR-DL" then
		printer.centered("An error has occurred, Retrying...", 19)
		sleep(2)
		shell.run("systemFiles/Install/updater", "quiet")
	end
else
	welcome()
end

